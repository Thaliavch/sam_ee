#!/bin/bash

# Enable logging to a log file
LOGFILE="/tmp/startup-script.log"
exec > >(tee -a "$LOGFILE") 2>&1

echo "Startup script started at: $(date)"

# Write properties to config.properties
echo "Writing to config.properties..."
mkdir -p /home/model-server/
echo "install_py_dep_per_model=true" >> /home/model-server/config.properties
echo "enable_envvars_config=true" >> /home/model-server/config.properties

# Verify contents of config.properties
echo "Contents of config.properties:"
cat /home/model-server/config.properties

echo "Startup script completed at: $(date)"

# Use logger 
logger "Startup script started."

# Write properties to config.properties
logger "Writing to /home/model-server/config.properties..."
mkdir -p /home/model-server/
echo "install_py_dep_per_model=true" >> /home/model-server/config.properties
echo "enable_envvars_config=true" >> /home/model-server/config.properties



# Download the latest Protobuf release (3.21.12) from GitHub
!wget https://github.com/protocolbuffers/protobuf/releases/download/v3.21.12/protoc-3.21.12-linux-x86_64.zip

# Unzip the downloaded file to /usr/local
!unzip protoc-3.21.12-linux-x86_64.zip -d /usr/local

# Ensure the new protoc is available in PATH
!export PATH=/usr/local/bin:$PATH

# Verify the installed version
!protoc --version


# Verify contents and log the output
cat /home/model-server/config.properties | logger

logger "Startup script completed."




# Download Protobuf 3.21.12 from a verified source
!wget https://storage.googleapis.com/protobuf-release/v3.21.12/protoc-3.21.12-linux-x86_64.zip

# Unzip the downloaded file to /usr/local
!unzip protoc-3.21.12-linux-x86_64.zip -d /usr/local

# Ensure the new protoc is available in PATH
!export PATH=/usr/local/bin:$PATH

# Verify the installed version
!protoc --version



# Step 1: Install the latest Protobuf release for Linux
!wget https://github.com/protocolbuffers/protobuf/releases/download/v21.12/protoc-21.12-linux-x86_64.zip

# Step 2: Unzip Protobuf to /usr/local
!unzip protoc-21.12-linux-x86_64.zip -d /usr/local

# Step 3: Update PATH to include the Protobuf binary
import os
os.environ["PATH"] += ":/usr/local/bin"

# Step 4: Verify the Protobuf installation
!protoc --version  # Should print 'libprotoc 21.12'

# Step 5: Upload your .proto file from your local machine
from google.colab import files
uploaded = files.upload()

# Step 6: Generate the Python file from the .proto file
# Assuming your uploaded file is named 'tensor.proto'
!protoc --python_out=. tensor.proto

# Step 7: Verify that the tensor_pb2.py file was generated
!ls

# Step 8: Test the Protobuf serialization/deserialization logic
from tensor_pb2 import Tensor

# Create a TensorProto object
tensor = Tensor(values=[1.0, 2.0, 3.0], shape=[3], dtype="float32")

# Serialize the TensorProto to bytes
serialized = tensor.SerializeToString()

# Deserialize the bytes back to TensorProto
deserialized = Tensor.FromString(serializ

